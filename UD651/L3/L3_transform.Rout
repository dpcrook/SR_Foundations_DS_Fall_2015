
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.0.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> 
> ##################################################
> # Run with 
> #     R CMD BATCH L3_transform.R
> ##################################################
> 
> # install.packages('ggplot2', repos='http://cran.us.r-project.org')
> # install.packages("gridExtra", repos='http://cran.us.r-project.org') #sthash.PKF9Zh50.dpuf
> library(ggplot2)
> library(gridExtra)
> 
> # p1 = ggplot(...)
> # grid.arrange(p1, p2, p3, p4, ncol=2)
> 
> 
> setwd("~/projects/Classes/FoundationsOfDataScience_sliderule/github/UD651")
> 
> pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
> names(pf)
 [1] "userid"                "age"                   "dob_day"              
 [4] "dob_year"              "dob_month"             "gender"               
 [7] "tenure"                "friend_count"          "friendships_initiated"
[10] "likes"                 "likes_received"        "mobile_likes"         
[13] "mobile_likes_received" "www_likes"             "www_likes_received"   
> 
> # qplot(x = friend_count, data = pf)
> 
> summary(pf$friend_count)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    0.0    31.0    82.0   196.4   206.0  4923.0 
> 
> summary(log(pf$friend_count + 1))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  0.000   3.466   4.419   4.301   5.333   8.502 
> 
> summary(sqrt(pf$friend_count))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  0.000   5.568   9.055  11.090  14.350  70.160 
> 
> summary(log10(pf$friend_count + 1))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  0.000   1.505   1.919   1.868   2.316   3.692 
> 
> # p1 = qplot(x = friend_count, data = pf)
> # p2 = qplot(x = log10(pf$friend_count + 1), data = pf)
> # p3 = qplot(x = sqrt(pf$friend_count), data = pf)
> # grid.arrange(p1, p2, p3, ncol=1)
> 
> p1 = ggplot(aes(x = friend_count), data = pf) + geom_histogram()
> 
> p2 = ggplot(aes(x = friend_count), data = pf) + 
+   geom_histogram() +
+   scale_x_log10()
> 
> grid.arrange(p1, p2, ncol=2)
stat_bin: binwidth defaulted to range/30. Use 'binwidth = x' to adjust this.
stat_bin: binwidth defaulted to range/30. Use 'binwidth = x' to adjust this.
> 
> 
> # ggplot(aes(x = friend_count, y = ..count../sum(..count..)), 
> #        data = subset(pf, !is.na(gender))) +
> #   geom_freqpoly(aes(color = gender), binwidth=10) + 
> #   scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
> #   xlab('Friend Count') + 
> #   ylab('Percentage of users with that friend count')
> 
> # # different ranges
> # ggplot(aes(x = friend_count, y = ..count../sum(..count..)), 
> #        data = subset(pf, !is.na(gender))) +
> #   geom_freqpoly(aes(color = gender), binwidth=20) + 
> #   scale_x_continuous(limits = c(0, 2000), breaks = seq(0, 2000, 100)) +
> #   xlab('Friend Count') + 
> #   ylab('Percentage of users with that friend count')
> # 
> # # 
> # ggplot(aes(x = friend_count, y = ..density..), 
> #        data = subset(pf, !is.na(gender))) +
> #   geom_freqpoly(aes(color = gender), binwidth=20) + 
> #   scale_x_continuous(limits = c(0, 2000), breaks = seq(0, 2000, 100)) +
> #   xlab('Friend Count') + 
> #   ylab('Percentage of users with that friend count')
> 
> ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
+   geom_freqpoly(aes(color = gender)) + 
+   scale_x_log10()
stat_bin: binwidth defaulted to range/30. Use 'binwidth = x' to adjust this.
> 
> by(pf$www_likes, pf$gender, sum)
pf$gender: female
[1] 3507665
------------------------------------------------------------ 
pf$gender: male
[1] 1430175
> 
> # qplot(x = gender, y = friend_count, data = subset(pf, !is.na(gender)),
> #       geom="boxplot")
> 
> ggplot(aes(x = gender, y = friend_count), 
+        data = subset(pf, (0 <= friend_count) & (friend_count <= 1000) & (!is.na(gender)))) +
+   geom_boxplot(outlier.shape=NA)
Warning messages:
1: Removed 2851 rows containing missing values (geom_point). 
2: Removed 4378 rows containing missing values (geom_point). 
> 
> # qplot(x = gender, y = friend_count, data = subset(pf, !is.na(gender)),
> #       geom="boxplot", ylim= c(0,1000))
> 
> qplot(x = gender, y = friend_count, data = subset(pf, !is.na(gender)),
+       geom="boxplot") +
+   coord_cartesian( ylim= c(0,250))
> 
> by(pf$friend_count, pf$gender, sum)
pf$gender: female
[1] 9740258
------------------------------------------------------------ 
pf$gender: male
[1] 9666787
> 
> by(pf$friendships_initiated, pf$gender, summary)
pf$gender: female
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    0.0    19.0    49.0   113.9   124.8  3654.0 
------------------------------------------------------------ 
pf$gender: male
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    0.0    15.0    44.0   103.1   111.0  4144.0 
> 
> qplot(x = gender, y = friendships_initiated, data = subset(pf, !is.na(gender)),
+       geom="boxplot") +
+   coord_cartesian( ylim= c(0,150))
> 
> mobile_check_in <- NA
> pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
> pf$mobile_check_in <- factor(pf$mobile_check_in)
> summary(pf$mobile_check_in)
    0     1 
35056 63947 
> 
> sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
[1] 0.6459097
> 
> 
> 
> proc.time()
   user  system elapsed 
  3.089   0.309   3.467 
